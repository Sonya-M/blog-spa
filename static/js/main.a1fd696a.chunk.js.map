{"version":3,"sources":["partials/LoaderRipple.module.css","partials/PostItem.jsx","shared/utils.js","pages/Home.jsx","pages/About.jsx","pages/NewPostForm.jsx","partials/PostsByAuthor.jsx","partials/PostDiv.jsx","partials/RedirectButton.jsx","pages/SinglePost.jsx","pages/Authors.jsx","pages/SingleAuthor.jsx","partials/NewPostBtn.jsx","partials/BlogNav.jsx","partials/BlogFooter.jsx","partials/ErrorDisplay.jsx","entities/Post.js","services/endpoints.js","entities/Author.js","services/Mapper.js","services/Communicator.js","partials/LoaderRipple.jsx","App.js","index.js"],"names":["module","exports","PostItem","props","str","maxLength","post","ListGroupItem","to","id","className","title","body","substring","Math","min","length","authorId","Button","size","onClick","onDelete","onLike","color","isLiked","LikeBtn","colorStyle","style","cursor","Home","handleDelete","ListGroup","posts","map","About","NewPostForm","history","useHistory","useParams","selectedPost","find","initialFormState","useState","postInput","setPostInput","message","setMessage","handleInputChange","event","target","name","value","onSubmit","preventDefault","validator","onAddPost","push","Form","Control","type","placeholder","onChange","as","rows","PostsByAuthor","allPosts","PostDiv","author","RedirectButton","text","path","SinglePost","postId","parseInt","authors","allOtherPostsByAuthor","filter","Authors","AuthorListItem","SingleAuthor","username","email","phone","street","city","zipcode","Map","latitude","longitude","companyName","companySlogan","width","height","scrolling","marginHeight","marginWidth","frameBorder","border","src","NewPostBtn","BlogNav","BlogFooter","ErrorDisplay","Post","this","_authorId","_title","_body","_id","_liked","trim","split","word","toUpperCase","slice","toLowerCase","join","ALL_POSTS_ENDPOINT","ALL_USERS_ENDPOINT","Author","_name","_username","_email","_phone","_street","_city","_zipcode","_latitude","_longitude","_companyName","_companySlogan","Mapper","userId","user","address","geo","lat","lng","company","catchPhrase","Communicator","fetch","then","response","ok","json","Error","status","rawJSON","mapJsonToPost","mapJsonToAuthor","postTitle","postBody","postAuthorID","method","JSON","stringify","headers","console","log","LoaderRipple","styles","loaderContainer","App","setPosts","setAuthors","postInDatabase","findIndex","p","useEffect","fetchAllPosts","fetchAllAuthors","Container","fluid","exact","assert","unlike","like","liked","newPost","prevPosts","editPost","Date","now","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1fd696a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"LoaderRipple_loaderContainer__3Nr26\",\"lds-ripple\":\"LoaderRipple_lds-ripple__1jKif\"};","\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroupItem, Button } from \"react-bootstrap\";\r\nimport { HeartFill } from \"react-bootstrap-icons\";\r\n\r\nimport { truncateString } from \"../shared/utils\";\r\n// import \"./PostItem.scss\";\r\n\r\nexport default function PostItem(props) {\r\n  const { post } = props;\r\n  return (\r\n    < ListGroupItem >\r\n      <Link to={\"/posts/\" + post.id}>\r\n        <p className=\"display-6\">{post.title}</p>\r\n      </Link>\r\n      <p>{truncateString(post.body, 40)}</p>\r\n      <p>Author ID: {post.authorId}</p>\r\n      <Link to={\"/new/\" + post.id}>\r\n        <Button size=\"sm\" className=\"btn btn-primary\">Edit</Button>\r\n      </Link>\r\n      {\" \"}\r\n      <Button className=\"btn-danger btn-sm\"\r\n        onClick={() => props.onDelete(post.id)}>Delete</Button>\r\n      {\" \"}\r\n      < LikeBtn\r\n        onLike={props.onLike}\r\n        color={post.isLiked() ? \"plum\" : \"lightgray\"}\r\n      />\r\n    </ListGroupItem >\r\n\r\n  )\r\n}\r\n\r\nconst LikeBtn = (props) => {\r\n  const cursorStyle = { cursor: \"pointer\" };\r\n  const colorStyle = { color: props.color };\r\n  return (\r\n    <span >\r\n      <HeartFill size=\"2rem\"\r\n        onClick={props.onLike}\r\n        style={{ ...cursorStyle, ...colorStyle }}\r\n      />\r\n    </span>)\r\n}","export function truncateString(str, maxLength) {\r\n  return str.substring(0, Math.min(str.length, maxLength)) + \"...\";\r\n};\r\n\r\nexport function toProperCase(str) {\r\n  let result = [];\r\n  str = str.trim();\r\n  let words = str.split(\" \");\r\n  result = words.map(word => word[0].toUpperCase() + (word.slice(1)).toLowerCase());\r\n  return result.join(\" \");\r\n}\r\n\r\nexport function getQuickAndDirtyPostId() {\r\n  return Date.now();\r\n}","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport PostItem from \"../partials/PostItem\";\r\nimport \"./Home.scss\";\r\n\r\nexport default function Home(props) {\r\n\r\n  const handleDelete = (id) => {\r\n    props.onDelete(id);\r\n  };\r\n  const handleLike = (id) => {\r\n    props.onLike(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1 className=\"display-3 text-center\">All Posts</h1>\r\n      <ListGroup>\r\n        {props.posts.map((post => {\r\n          return (<PostItem\r\n            post={post}\r\n            key={post.id}\r\n            onDelete={handleDelete}\r\n            onLike={() => handleLike(post.id)}\r\n          />)\r\n        }))\r\n        }\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./About.scss\";\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div className=\"About m-5\">\r\n      <h1 className=\"display-4\">About</h1>\r\n      <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Labore dignissimos modi, similique necessitatibus reprehenderit odit minima vero enim ipsum quod quidem natus corporis? Rem quibusdam praesentium, dolorem quod accusantium repellendus! Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptatum nihil ducimus accusamus odio quam minima provident at, delectus aut recusandae cum accusantium et. Cumque dignissimos magni facere nam beatae voluptatum. Illum voluptate minima voluptas ad provident alias quo repellendus dignissimos, natus placeat amet? Facilis laboriosam praesentium minima itaque voluptatem maiores, officia consequatur voluptates! Repellendus officiis totam magnam officia, alias iure. Officiis natus nesciunt, fugit similique ex cumque amet mollitia necessitatibus dignissimos sunt culpa nostrum impedit quisquam eligendi officia velit delectus deserunt totam corporis quis iste facilis harum commodi! Quas, hic?\r\n      </p>\r\n      <h2 className=\"display-6\">What we do</h2>\r\n      <p>\r\n        Ex dolor maiores nemo beatae libero ipsum, laboriosam iure obcaecati commodi natus cumque id eos atque quo? Saepe doloremque eaque, provident aperiam laudantium architecto! Optio nobis voluptas asperiores nihil sint!\r\n        Maxime, quisquam libero? Sit nam obcaecati vel ipsa porro repudiandae, neque quasi laboriosam. Iure iste mollitia eligendi, distinctio necessitatibus saepe minima at blanditiis expedita perspiciatis odit, iusto sed tenetur molestiae!\r\n      </p>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport default function NewPostForm(props) {\r\n  let history = useHistory();\r\n  let { id } = useParams(); // post ID\r\n\r\n  let selectedPost = props.posts.find((post) => post.id === +id);\r\n\r\n  const initialFormState = selectedPost\r\n    ? {\r\n        authorId: selectedPost.authorId,\r\n        title: selectedPost.title,\r\n        body: selectedPost.body,\r\n      }\r\n    : { authorId: \"\", title: \"\", body: \"\" };\r\n  const [postInput, setPostInput] = useState(initialFormState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setPostInput({ ...postInput, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!postInput.title || !postInput.body || !postInput.authorId) {\r\n      setMessage(\"Please fill out all the fields!\");\r\n      return;\r\n    }\r\n    if (!props.validator(+postInput.authorId)) {\r\n      // convert string input to number with a + sign!!!\r\n      setMessage(\"Invalid author ID!\");\r\n      return;\r\n    }\r\n    props.onAddPost({ ...postInput, id: +id, authorId: +postInput.authorId });\r\n    history.push(\"/blog-sap\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"m-5\">\r\n      <h1 className=\"display-3 text-center\">New Post</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <Form.Control\r\n          className=\"m-2\"\r\n          type=\"number\"\r\n          name=\"authorId\"\r\n          value={postInput.authorId}\r\n          placeholder=\"Author id\"\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.Control\r\n          className=\"m-2\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={postInput.title}\r\n          placeholder=\"Title\"\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.Control\r\n          className=\"m-2\"\r\n          as=\"textarea\"\r\n          rows=\"10\"\r\n          name=\"body\"\r\n          value={postInput.body}\r\n          placeholder=\"Content\"\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <p>{message}</p>\r\n        <button className=\"btn btn-primary m-2\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function PostsByAuthor(props) {\r\n  const { allPosts } = props;\r\n  if (!allPosts || allPosts.length === 0) return (<Fragment />);\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <h5>{allPosts.length + \" more posts from the same author\"}</h5>\r\n      {\r\n        allPosts.map(post => {\r\n          return (\r\n            <Link to={\"/posts/\" + post.id} key={post.id}>\r\n              <p>{post.title} </p>\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  )\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function PostDiv(props) {\r\n  return (\r\n    <div className=\"PostDiv text-center\">\r\n      <h1 className=\"display-6\">\r\n        {props.selectedPost.title}\r\n      </h1>\r\n      <Link to={\"/authors/\" + props.author.id}>\r\n        <h6 >{props.author.name}</h6 >\r\n      </Link>\r\n      <div>{props.selectedPost.body}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","// https://reactrouter.com/web/api/Hooks\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function RedirectButton({ text, path }) {\r\n  let history = useHistory();\r\n  const handleClick = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <Button className=\"btn-dark m-2\" onClick={handleClick}>\r\n      {text}\r\n    </Button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport PostsByAuthor from \"../partials/PostsByAuthor\";\r\nimport PostDiv from \"../partials/PostDiv\";\r\n\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// To be able to pass props within the Router, must use the `useParams` hook\r\n// to extract/match the id from the path/url\r\n// https://reactrouter.com/web/api/Hooks/useparams\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nimport { useParams } from \"react-router-dom\";\r\nimport RedirectButton from \"../partials/RedirectButton\";\r\n\r\nexport default function SinglePost(props) {\r\n  const { id } = useParams();\r\n  const postId = parseInt(id);\r\n  const selectedPost = props.posts.find(post => post.id === postId);\r\n  const author = props.authors.find(author => author.id === selectedPost.authorId);\r\n\r\n  const allOtherPostsByAuthor = props.posts.filter(post => {\r\n    return post.authorId === author.id && post.id !== postId;\r\n  });\r\n\r\n  return (\r\n    <div className=\"SinglePost m-3\">\r\n      <RedirectButton\r\n        text=\"Back to all posts\"\r\n        path=\"/posts\"\r\n      />\r\n      < PostDiv\r\n        selectedPost={selectedPost}\r\n        author={author}\r\n        posts={props.posts}\r\n      />\r\n      <PostsByAuthor\r\n        allPosts={allOtherPostsByAuthor}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport \"./Authors.scss\";\r\n\r\nexport default function Authors(props) {\r\n\r\n  return (\r\n    <div className=\"Authors\">\r\n      <h1 className=\"display-3 text-center\">All Authors</h1>\r\n      <ListGroup>\r\n        {props.authors.map((author) => {\r\n          return (\r\n            <AuthorListItem\r\n              key={author.id}\r\n              name={author.name}\r\n              id={author.id}\r\n            />\r\n          );\r\n        })}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst AuthorListItem = (props) => {\r\n  const path = \"/authors/\" + props.id;\r\n  return (\r\n    <ListGroupItem>\r\n      <Link to={path}>\r\n\r\n        <p className=\"display-6\">\r\n          {props.name}\r\n        </p>\r\n\r\n      </Link>\r\n    </ListGroupItem>\r\n  )\r\n}","import React from \"react\";\r\n\r\n// https://reactrouter.com/web/api/Hooks\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport RedirectButton from \"../partials/RedirectButton\";\r\n\r\nimport { ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nexport default function SingleAuthor(props) {\r\n\r\n  let { id } = useParams(); // https://reactrouter.com/web/api/Hooks\r\n  const authorId = parseInt(id);\r\n  const author = props.authors.find((author) => author.id === authorId);\r\n\r\n  return (\r\n    <div className=\"m-3\">\r\n      <RedirectButton\r\n        text=\"Back to all authors\"\r\n        path=\"/authors\"\r\n      />\r\n      <h1>{author.name}</h1>\r\n      <ListGroup>\r\n        <ListGroupItem>username: {author.username}</ListGroupItem>\r\n        <ListGroupItem>email: {author.email}</ListGroupItem>\r\n        <ListGroupItem>phone: {author.phone}</ListGroupItem>\r\n      </ListGroup>\r\n      <div className=\"Address\">\r\n        <h4>Address</h4>\r\n        <ListGroup>\r\n          <ListGroupItem>street: {author.street}</ListGroupItem>\r\n          <ListGroupItem>city: {author.city}</ListGroupItem>\r\n          <ListGroupItem>zipcode: {author.zipcode}</ListGroupItem>\r\n        </ListGroup>\r\n        <Map\r\n          street={author.street}\r\n          latitude={author.latitude}\r\n          longitude={author.longitude}\r\n        />\r\n      </div>\r\n      <div className=\"Company\">\r\n        <h4>Company</h4>\r\n        <ListGroup>\r\n          <ListGroupItem>name: {author.companyName}</ListGroupItem>\r\n          <ListGroupItem>slogan: {author.companySlogan}</ListGroupItem>\r\n\r\n        </ListGroup>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Map(props) {\r\n\r\n  return (\r\n    <iframe\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      scrolling=\"no\"\r\n      marginHeight=\"0\"\r\n      marginWidth=\"0\"\r\n      title={props.street}\r\n      frameBorder=\"0\"\r\n      style={{ border: 0 }}\r\n      src={`https://maps.google.com/maps?q=${props.latitude},${props.longitude}&z=15&output=embed`}\r\n    />\r\n\r\n  )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n\r\nexport default function NewPostBtn() {\r\n  return (\r\n    <Link to=\"/new/0\">\r\n      <Button\r\n        className=\"btn btn-info text-light m-1\"\r\n      > New Post\r\n      </Button>\r\n    </Link>\r\n\r\n  );\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NewPostBtn from \"./NewPostBtn\";\r\n\r\nimport \"./BlogNav.scss\";\r\n\r\nfunction BlogNav(props) {\r\n  return (\r\n    <nav\r\n      className=\"BlogNav d-flex align-items-center justify-content-between\">\r\n      <span className=\"mr-auto p-2\">\r\n        <NewPostBtn />\r\n      </span>\r\n      <div>\r\n        <span>\r\n          <Link to=\"/posts\">Posts</Link>\r\n        </span>\r\n        <span>\r\n          <Link to=\"/authors\">Authors</Link>\r\n        </span>\r\n        <span>\r\n          <Link to=\"/about\">About</Link>\r\n        </span>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default BlogNav;","import React from \"react\";\r\nimport \"./BlogFooter.scss\";\r\n\r\nfunction BlogFooter(props) {\r\n  return (\r\n    <footer className=\"BlogFooter\">@</footer>\r\n  )\r\n}\r\n\r\nexport default BlogFooter;","import React from \"react\";\r\nimport { EmojiFrownFill } from \"react-bootstrap-icons\";\r\nimport \"./ErrorDisplay.scss\";\r\n\r\nfunction ErrorDisplay(props) {\r\n  return (\r\n    <div className=\"ErrorDisplay\">\r\n      <EmojiFrownFill size=\"10rem\" className=\"d-block mx-auto\" />\r\n      <h1 className=\"display-3 text-center\">{props.message}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorDisplay;","import { toProperCase } from \"../shared/utils\";\r\nclass Post {\r\n  constructor(authorId, title, body, id) {\r\n    this._authorId = authorId;\r\n    this._title = title;\r\n    this._body = body;\r\n    this._id = id;\r\n    this._liked = false;\r\n  }\r\n\r\n  get authorId() { return this._authorId; }\r\n\r\n  get id() { return this._id; }\r\n\r\n  get title() { return toProperCase(this._title); }\r\n\r\n  get body() { return this._body; }\r\n\r\n  like() {\r\n    this._liked = true;\r\n  }\r\n  unlike() {\r\n    this._liked = false;\r\n  }\r\n  isLiked() {\r\n    return this._liked;\r\n  }\r\n}\r\n\r\nexport default Post;","// GUIDE: https://jsonplaceholder.typicode.com/guide/\r\n\r\nexport const ALL_POSTS_ENDPOINT = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\n// fetch single post by id: ALL_POSTS_ENDPOINT + \"/\" + id;\r\n// fetch comments for post with id: ALL_POSTS_ENDPOINT + \"/\" + id + \"/comments\";\r\n// (equivalent to /comments?postId=1)\r\n\r\nexport const ALL_USERS_ENDPOINT = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\n// Basic filtering is supported through query parameters.\r\n// This will return all the posts that belong to the first user\r\n// 'https://jsonplaceholder.typicode.com/posts?userId=1'\r\n","// class with getters and private ivars to ensure immutability\r\n\r\nclass Author {\r\n  constructor(id, name, username, email, phone, street, city, zipcode, latitude, longitude, companyName, companySlogan) {\r\n    this._id = id;\r\n    this._name = name;\r\n    this._username = username;\r\n    this._email = email;\r\n    this._phone = phone;\r\n    this._street = street;\r\n    this._city = city;\r\n    this._zipcode = zipcode;\r\n    this._latitude = latitude;\r\n    this._longitude = longitude;\r\n    this._companyName = companyName;\r\n    this._companySlogan = companySlogan;\r\n  }\r\n\r\n  get id() { return this._id; }\r\n  get name() { return this._name };\r\n  get username() { return this._username };\r\n  get email() { return this._email };\r\n  get phone() { return this._phone };\r\n  get street() { return this._street };\r\n  get city() { return this._city };\r\n  get zipcode() { return this._zipcode };\r\n  get latitude() { return this._latitude };\r\n  get longitude() { return this._longitude };\r\n  get companyName() { return this._companyName };\r\n  get companySlogan() { return this._companySlogan };\r\n\r\n}\r\n\r\nexport default Author;","import Post from \"../entities/Post\";\r\nimport Author from \"../entities/Author\";\r\n\r\nclass Mapper {\r\n\r\n  /** \r\n   * Creates and returns a Post instance from raw data in given object literal \r\n   * @returns {Post}\r\n  */\r\n  static mapJsonToPost(post) {\r\n    return new Post(post.userId, post.title, post.body, post.id);\r\n  }\r\n\r\n  /** \r\n   * Creates and returns an Author instance from raw data in given object literal \r\n   * @returns {Author}\r\n   * */\r\n  static mapJsonToAuthor(user) {\r\n    // console.log(user)\r\n    return new Author(user.id, user.name, user.username, user.email,\r\n      user.phone, user.address.street, user.address.city, user.address.zipcode, user.address.geo.lat, user.address.geo.lng,\r\n      user.company.name, user.company.catchPhrase);\r\n  }\r\n\r\n}\r\n\r\nexport default Mapper;","import { ALL_USERS_ENDPOINT, ALL_POSTS_ENDPOINT } from \"./endpoints\";\r\n\r\nimport Mapper from \"./Mapper\";\r\n\r\nclass Communicator {\r\n\r\n  static fetchAllPosts() {\r\n    return (\r\n      fetch(ALL_POSTS_ENDPOINT)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`Error! Response status: ${response.status}`);\r\n          }\r\n          else {\r\n            return response.json();\r\n          }\r\n        }).then((rawJSON) => {\r\n          return rawJSON.map(post => Mapper.mapJsonToPost(post))\r\n        })\r\n    );\r\n  }\r\n\r\n  static fetchAllAuthors() {\r\n    return (\r\n      fetch(ALL_USERS_ENDPOINT)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`Error! Response status: ${response.status}`);\r\n          } else {\r\n            return response.json();\r\n          }\r\n        }).then(rawJSON => {\r\n          return rawJSON.map(user => Mapper.mapJsonToAuthor(user))\r\n        })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Simulates generating new content\r\n   * @param {string} post title\r\n   * @param {string} post body\r\n   * @param {number} author id\r\n   * @returns Post instance with autogenerated ID\r\n   */\r\n  static createPost(postTitle, postBody, postAuthorID) {\r\n    return (\r\n      fetch(ALL_POSTS_ENDPOINT, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          title: postTitle,\r\n          body: postBody,\r\n          userId: postAuthorID,\r\n        }),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((rawJSON) => {\r\n          console.log(rawJSON);\r\n          return Mapper.mapJsonToPost(rawJSON);\r\n        })\r\n    )\r\n  }\r\n\r\n  static fetchAllPostsByAuthor(authorId) {\r\n    return (\r\n      fetch(ALL_POSTS_ENDPOINT + \"?userId=\" + authorId)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`Error! Response status: ${response.status}`);\r\n          } else {\r\n            return response.json();\r\n          }\r\n        })\r\n        .then((rawJSON) => {\r\n          return rawJSON.map(post => Mapper.mapJsonToPost(post))\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Fetches author data based on given id and returns an Author instance\r\n   * @returns {Author} \r\n   */\r\n  static getAuthor(authorId) {\r\n    return (\r\n      fetch(ALL_USERS_ENDPOINT + \"/\" + authorId)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`Error! Response status: ${response.status}`);\r\n          } else {\r\n            return response.json();\r\n          }\r\n        })\r\n        .then(rawJSON => Mapper.mapJsonToAuthor(rawJSON))\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Communicator;\r\n\r\n// Example usage:\r\n// Communicator.fetchAllPosts();\r\n// Communicator.fetchAllAuthors();\r\n// Communicator.createPost();\r\n// Comunicator.fetchAllPostsByAuthor(authorId);\r\n\r\n// test data fetch\r\n// Communicator.fetchAllPosts();\r\n// Communicator.fetchAllAuthors();\r\n// Communicator.fetchAllPostsByAuthor(2);\r\n// async function testCreatePost() {\r\n//   let myPost =\r\n//     await Communicator.createPost(\"my title\", \"my post body\", 33);\r\n//   return myPost;\r\n// }\r\n// testCreatePost().then((post) => console.log(post));\r\n\r\n// async function testGetAuthorInfo() {\r\n//   let author = await Communicator.getAuthor(1);\r\n//   console.log(author);\r\n//   return author;\r\n// }\r\n\r\n// testGetAuthorInfo();\r\n\r\n\r\n","import styles from \"./LoaderRipple.module.css\";\r\n\r\nexport default function LoaderRipple(props) {\r\n  return (\r\n    <div className={styles.loaderContainer}>\r\n      <div className={styles[\"lds-ripple\"]}>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport About from \"./pages/About\";\r\nimport NewPostForm from \"./pages/NewPostForm\";\r\nimport SinglePost from \"./pages/SinglePost\";\r\nimport Authors from \"./pages/Authors\";\r\nimport SingleAuthor from \"./pages/SingleAuthor\";\r\nimport BlogNav from \"./partials/BlogNav\";\r\nimport BlogFooter from \"./partials/BlogFooter\";\r\nimport ErrorDisplay from \"./partials/ErrorDisplay\";\r\nimport Post from \"./entities/Post\";\r\nimport Communicator from \"./services/Communicator\";\r\nimport { getQuickAndDirtyPostId } from \"./shared/utils\";\r\nimport LoaderRipple from \"./partials/LoaderRipple\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [authors, setAuthors] = useState([]);\r\n\r\n  function addPost(post) {\r\n    //should communicate with server, but it's a mock server...\r\n    if (post.id) {\r\n      editPost(post);\r\n      return;\r\n    }\r\n    const newPost = new Post(post.authorId, post.title, post.body,\r\n      getQuickAndDirtyPostId());\r\n    setPosts((prevPosts) => (\r\n      [newPost, ...prevPosts]\r\n    ));\r\n  }\r\n\r\n  function postInDatabase(postId) {\r\n    return posts.findIndex(p => p.id === postId) !== -1;\r\n  }\r\n\r\n  function editPost(post) {\r\n    //should communicate with server, but it's a mock server...\r\n    console.assert(postInDatabase(post.id));\r\n\r\n    console.log(typeof post.id === typeof posts[0].id); // true\r\n    const liked = (posts.find(p => p.id === post.id)).isLiked();\r\n\r\n    const newPost = new Post(post.authorId, post.title, post.body,\r\n      post.id); // set new id\r\n    if (liked) newPost.like();\r\n    setPosts((prevPosts) => (\r\n      [newPost, ...(prevPosts.filter(p => p.id !== post.id))]\r\n    ));\r\n  }\r\n\r\n  function deletePost(postId) {\r\n    //TODO: should communicate with server\r\n    console.assert(postInDatabase(+postId));\r\n    setPosts(posts.filter(p => p.id !== +postId));\r\n  }\r\n\r\n  const isValidAuthorId = (id) => {\r\n    return (authors.findIndex(author => author.id === id) !== -1);\r\n  };\r\n\r\n  const handleLike = (id) => {\r\n    console.assert(postInDatabase(id));\r\n    setPosts(posts.map(p => {\r\n      if (p.id === id) {\r\n        if (p.isLiked()) p.unlike();\r\n        else p.like();\r\n      }\r\n      return p;\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    Communicator.fetchAllPosts()\r\n      .then((response) => {\r\n        setPosts(response);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Communicator.fetchAllAuthors()\r\n      .then((response) => {\r\n        setAuthors(response);\r\n      });\r\n  }, []);\r\n\r\n\r\n  if (!authors || authors.length === 0 || !posts || posts.length === 0) {\r\n    return (\r\n      <LoaderRipple />\r\n    );\r\n  }\r\n  return (\r\n    <Container fluid id=\"blog-sap\">\r\n      <BlogNav />\r\n      <Switch>\r\n        <Route exact path=\"/blog-sap\">\r\n          <Home\r\n            posts={posts}\r\n            onDelete={deletePost}\r\n            onLike={handleLike}\r\n          />\r\n        </Route> {/* list all posts */}\r\n\r\n        <Route exact path=\"/new/:id\">\r\n          <NewPostForm\r\n            validator={isValidAuthorId}\r\n            onAddPost={addPost}\r\n            posts={posts}\r\n          />\r\n        </Route>\r\n\r\n        {/* NB!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        to match the id of the path, use the `useParams()` hook:\r\n        (see also the implementation of SinglePost & SingleAuthor)\r\n        https://reactrouter.com/web/api/Hooks/useparams */}\r\n        <Route exact path=\"/posts/:id\">\r\n          <SinglePost\r\n            posts={posts}\r\n            authors={authors}\r\n          />\r\n        </Route>\r\n\r\n        <Route exact path=\"/authors\">\r\n          <Authors authors={authors} />\r\n        </Route>\r\n\r\n        {/* !!! see comment for Route to SinglePost above !!! */}\r\n        <Route exact path=\"/authors/:id\">\r\n          <SingleAuthor\r\n            posts={posts}\r\n            authors={authors}\r\n          />\r\n        </Route>\r\n\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route exact path=\"/posts\">\r\n          <Redirect to=\"/blog-sap\" />\r\n        </Route>\r\n        <Route>\r\n          <ErrorDisplay message=\"Page not found\" />\r\n        </Route>\r\n      </Switch>\r\n      <BlogFooter />\r\n    </Container>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}